(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

require('./pages/main/main');

},{"./pages/main/main":2}],2:[function(require,module,exports){
"use strict";

// eslint-disable-next-line no-undef
var root = document.querySelector('.p-main');

if (root) {
  var el = {
    docs: root.querySelector('[data-docs]')
  }; // eslint-disable-next-line no-undef

  fetch('https://api.github.com/repos/alexpryshchepa/gulp-starter/readme', {
    headers: {
      Accept: 'application/vnd.github.v3.html'
    }
  }).then(function (response) {
    return response.text();
  }).then(function (data) {
    el.docs.innerHTML = data;
  })["catch"](function () {
    el.docs.innerHTML = 'Can not retrieve README.md';
  });
}

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvaW5kZXguanMiLCJzcmMvcGFnZXMvbWFpbi9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxPQUFPLENBQUMsbUJBQUQsQ0FBUDs7Ozs7QUNBQTtBQUNBLElBQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLFNBQXZCLENBQWI7O0FBRUEsSUFBSSxJQUFKLEVBQVU7QUFDUixNQUFNLEVBQUUsR0FBRztBQUNULElBQUEsSUFBSSxFQUFFLElBQUksQ0FBQyxhQUFMLENBQW1CLGFBQW5CO0FBREcsR0FBWCxDQURRLENBS1I7O0FBQ0EsRUFBQSxLQUFLLENBQUMsaUVBQUQsRUFBb0U7QUFDdkUsSUFBQSxPQUFPLEVBQUU7QUFDUCxNQUFBLE1BQU0sRUFBRTtBQUREO0FBRDhELEdBQXBFLENBQUwsQ0FLRyxJQUxILENBS1EsVUFBQyxRQUFEO0FBQUEsV0FBYyxRQUFRLENBQUMsSUFBVCxFQUFkO0FBQUEsR0FMUixFQU1HLElBTkgsQ0FNUSxVQUFDLElBQUQsRUFBVTtBQUNkLElBQUEsRUFBRSxDQUFDLElBQUgsQ0FBUSxTQUFSLEdBQW9CLElBQXBCO0FBQ0QsR0FSSCxXQVFXLFlBQU07QUFDYixJQUFBLEVBQUUsQ0FBQyxJQUFILENBQVEsU0FBUixHQUFvQiw0QkFBcEI7QUFDRCxHQVZIO0FBV0QiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwicmVxdWlyZSgnLi9wYWdlcy9tYWluL21haW4nKTtcclxuIiwiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXHJcbmNvbnN0IHJvb3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucC1tYWluJyk7XHJcblxyXG5pZiAocm9vdCkge1xyXG4gIGNvbnN0IGVsID0ge1xyXG4gICAgZG9jczogcm9vdC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1kb2NzXScpLFxyXG4gIH07XHJcblxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxyXG4gIGZldGNoKCdodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zL2FsZXhwcnlzaGNoZXBhL2d1bHAtc3RhcnRlci9yZWFkbWUnLCB7XHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL3ZuZC5naXRodWIudjMuaHRtbCcsXHJcbiAgICB9LFxyXG4gIH0pXHJcbiAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLnRleHQoKSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGVsLmRvY3MuaW5uZXJIVE1MID0gZGF0YTtcclxuICAgIH0pLmNhdGNoKCgpID0+IHtcclxuICAgICAgZWwuZG9jcy5pbm5lckhUTUwgPSAnQ2FuIG5vdCByZXRyaWV2ZSBSRUFETUUubWQnO1xyXG4gICAgfSk7XHJcbn1cclxuIl0sInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0p6Y21NdmFXNWtaWGd1YW5NaUxDSnpjbU12Y0dGblpYTXZiV0ZwYmk5dFlXbHVMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk96czdRVU5CUVN4UFFVRlBMRU5CUVVNc2JVSkJRVVFzUTBGQlVEczdPenM3UVVOQlFUdEJRVU5CTEVsQlFVMHNTVUZCU1N4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGVUxFTkJRWFZDTEZOQlFYWkNMRU5CUVdJN08wRkJSVUVzU1VGQlNTeEpRVUZLTEVWQlFWVTdRVUZEVWl4TlFVRk5MRVZCUVVVc1IwRkJSenRCUVVOVUxFbEJRVUVzU1VGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4aFFVRk1MRU5CUVcxQ0xHRkJRVzVDTzBGQlJFY3NSMEZCV0N4RFFVUlJMRU5CUzFJN08wRkJRMEVzUlVGQlFTeExRVUZMTEVOQlFVTXNhVVZCUVVRc1JVRkJiMFU3UVVGRGRrVXNTVUZCUVN4UFFVRlBMRVZCUVVVN1FVRkRVQ3hOUVVGQkxFMUJRVTBzUlVGQlJUdEJRVVJFTzBGQlJEaEVMRWRCUVhCRkxFTkJRVXdzUTBGTFJ5eEpRVXhJTEVOQlMxRXNWVUZCUXl4UlFVRkVPMEZCUVVFc1YwRkJZeXhSUVVGUkxFTkJRVU1zU1VGQlZDeEZRVUZrTzBGQlFVRXNSMEZNVWl4RlFVMUhMRWxCVGtnc1EwRk5VU3hWUVVGRExFbEJRVVFzUlVGQlZUdEJRVU5rTEVsQlFVRXNSVUZCUlN4RFFVRkRMRWxCUVVnc1EwRkJVU3hUUVVGU0xFZEJRVzlDTEVsQlFYQkNPMEZCUTBRc1IwRlNTQ3hYUVZGWExGbEJRVTA3UVVGRFlpeEpRVUZCTEVWQlFVVXNRMEZCUXl4SlFVRklMRU5CUVZFc1UwRkJVaXhIUVVGdlFpdzBRa0ZCY0VJN1FVRkRSQ3hIUVZaSU8wRkJWMFFpTENKbWFXeGxJam9pWjJWdVpYSmhkR1ZrTG1weklpd2ljMjkxY21ObFVtOXZkQ0k2SWlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpaG1kVzVqZEdsdmJpZ3BlMloxYm1OMGFXOXVJSElvWlN4dUxIUXBlMloxYm1OMGFXOXVJRzhvYVN4bUtYdHBaaWdoYmx0cFhTbDdhV1lvSVdWYmFWMHBlM1poY2lCalBWd2lablZ1WTNScGIyNWNJajA5ZEhsd1pXOW1JSEpsY1hWcGNtVW1KbkpsY1hWcGNtVTdhV1lvSVdZbUptTXBjbVYwZFhKdUlHTW9hU3doTUNrN2FXWW9kU2x5WlhSMWNtNGdkU2hwTENFd0tUdDJZWElnWVQxdVpYY2dSWEp5YjNJb1hDSkRZVzV1YjNRZ1ptbHVaQ0J0YjJSMWJHVWdKMXdpSzJrclhDSW5YQ0lwTzNSb2NtOTNJR0V1WTI5a1pUMWNJazFQUkZWTVJWOU9UMVJmUms5VlRrUmNJaXhoZlhaaGNpQndQVzViYVYwOWUyVjRjRzl5ZEhNNmUzMTlPMlZiYVYxYk1GMHVZMkZzYkNod0xtVjRjRzl5ZEhNc1puVnVZM1JwYjI0b2NpbDdkbUZ5SUc0OVpWdHBYVnN4WFZ0eVhUdHlaWFIxY200Z2J5aHVmSHh5S1gwc2NDeHdMbVY0Y0c5eWRITXNjaXhsTEc0c2RDbDljbVYwZFhKdUlHNWJhVjB1Wlhod2IzSjBjMzFtYjNJb2RtRnlJSFU5WENKbWRXNWpkR2x2Ymx3aVBUMTBlWEJsYjJZZ2NtVnhkV2x5WlNZbWNtVnhkV2x5WlN4cFBUQTdhVHgwTG14bGJtZDBhRHRwS3lzcGJ5aDBXMmxkS1R0eVpYUjFjbTRnYjMxeVpYUjFjbTRnY24wcEtDa2lMQ0p5WlhGMWFYSmxLQ2N1TDNCaFoyVnpMMjFoYVc0dmJXRnBiaWNwTzF4eVhHNGlMQ0l2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYm04dGRXNWtaV1pjY2x4dVkyOXVjM1FnY205dmRDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXdMVzFoYVc0bktUdGNjbHh1WEhKY2JtbG1JQ2h5YjI5MEtTQjdYSEpjYmlBZ1kyOXVjM1FnWld3Z1BTQjdYSEpjYmlBZ0lDQmtiMk56T2lCeWIyOTBMbkYxWlhKNVUyVnNaV04wYjNJb0oxdGtZWFJoTFdSdlkzTmRKeWtzWEhKY2JpQWdmVHRjY2x4dVhISmNiaUFnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUc1dkxYVnVaR1ZtWEhKY2JpQWdabVYwWTJnb0oyaDBkSEJ6T2k4dllYQnBMbWRwZEdoMVlpNWpiMjB2Y21Wd2IzTXZZV3hsZUhCeWVYTm9ZMmhsY0dFdlozVnNjQzF6ZEdGeWRHVnlMM0psWVdSdFpTY3NJSHRjY2x4dUlDQWdJR2hsWVdSbGNuTTZJSHRjY2x4dUlDQWdJQ0FnUVdOalpYQjBPaUFuWVhCd2JHbGpZWFJwYjI0dmRtNWtMbWRwZEdoMVlpNTJNeTVvZEcxc0p5eGNjbHh1SUNBZ0lIMHNYSEpjYmlBZ2ZTbGNjbHh1SUNBZ0lDNTBhR1Z1S0NoeVpYTndiMjV6WlNrZ1BUNGdjbVZ6Y0c5dWMyVXVkR1Y0ZENncEtWeHlYRzRnSUNBZ0xuUm9aVzRvS0dSaGRHRXBJRDArSUh0Y2NseHVJQ0FnSUNBZ1pXd3VaRzlqY3k1cGJtNWxja2hVVFV3Z1BTQmtZWFJoTzF4eVhHNGdJQ0FnZlNrdVkyRjBZMmdvS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0JsYkM1a2IyTnpMbWx1Ym1WeVNGUk5UQ0E5SUNkRFlXNGdibTkwSUhKbGRISnBaWFpsSUZKRlFVUk5SUzV0WkNjN1hISmNiaUFnSUNCOUtUdGNjbHh1ZlZ4eVhHNGlYWDA9In0=
